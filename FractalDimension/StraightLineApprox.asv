function [straightLineRidges, jaggedness, edgeLengthVar, angleVar, angleMean,angleTurn,err_c,err_id] = StraightLineApprox(strikingPlatform, blanks, scars,file)
if nargin < 3
%     [name, path] = uigetfile('ScarsQins-*.mat'); 
    name = 'ScarsQins-EG_IV_3028.mat'; path = 'E:\Archeology Lab\forItamar\FrancescoNewBugs\';
    scars = load([path name]);
    file=name;
end

% figure
% hold on
straightLineRidges = cell(size(blanks));
jaggedness = zeros(size(blanks));
err_id=zeros(length(blanks),1);
err_c=cell(0,1);
neighbors = cell2mat(scars.scars_data(:, 2));
if isempty(scars.sdata(strikingPlatform).faces)
       err_c{size(err_c,1)+1,:}=['Striking platform was merged: ',file,'; Scar ID: ',strikingPlatform];
       err_id(strikingPlatform)=1;
       return
end
[up, ~] = SurfaceMeanNorm(scars.sdata(strikingPlatform).faces, scars.v, [0 0 0]);
for neighborIndex = 1:length(blanks)
    neighbor = blanks(neighborIndex);
    if isempty(scars.sdata(neighbor).faces)
       continue;
    else
        [forward, ~] = SurfaceMeanNorm(scars.sdata(neighbor).faces, scars.v, [0 0 0]);
        eitherNeighbor = neighbors == [min(strikingPlatform, neighbor), max(strikingPlatform, neighbor)];
        bothNeighbors = eitherNeighbor(:, 1) & eitherNeighbor(:, 2);
        ridgeIndices = find(bothNeighbors > 0);
        if isempty(ridgeIndices)
           err_c{size(err_c,1)+1,:}=['No shared ridge: ',file,'; Scar1 ID: ',num2str(strikingPlatform),...
               '; Scar2 ID: ',num2str(blanks(neighborIndex))]; 
%            edgeLengthVar=[];
%            angleVar=[];
%            angleMean=[];
           err_id(neighborIndex)=1;
        else
        ridge = [];
    %     patch('Faces',scars.sdata(neighbor).faces,'Vertices',scars.v,'facecolor',[1 1 1],'linestyle','none','AmbientStrength',0.3, ...
    %       'SpecularExponent',30,'SpecularStrength',0.1,'Tag',getPatchTag);
        for i = 1:length(ridgeIndices)
    %         plot3(scars.scars_data{ridgeIndices(i), 1}(:, 1), scars.scars_data{ridgeIndices(i), 1}(:, 2), scars.scars_data{ridgeIndices(i), 1}(:, 3))
            ridge = [ridge; scars.scars_data{ridgeIndices(i), 1}];
        end
        [p1, p2, curvatures] = LineApprox(ridge, forward, up);
        curvatures(find(curvatures==inf))=NaN;
        curvatures(imag(curvatures)~=0)=NaN;
        straightLineRidges{neighborIndex} = [p1; p2];
        jaggedness(neighborIndex) = mean(curvatures,'omitnan');
    %     plot3([p1(1), p2(1)], [p1(2), p2(2)], [p1(3), p2(3)]);
        end
    end
end
straightLineRidges=straightLineRidges(~err_id);
jaggedness=jaggedness(~err_id);
if length(straightLineRidges)>1 %more than 1 valid blank-plat pairs
lengths = NaN(length(straightLineRidges), 1);
angles = NaN(length(straightLineRidges), 1);
edges=zeros(length(straightLineRidges),3);
for i = 1:length(straightLineRidges)
   edges(i,:) = straightLineRidges{i}(2, :) - straightLineRidges{i}(1, :);
   if (i < length(straightLineRidges))
       nextEdge = straightLineRidges{i + 1}(2, :) - straightLineRidges{i + 1}(1, :);
   else
       nextEdge = straightLineRidges{1}(2, :) - straightLineRidges{1}(1, :);
   end
   
   lengths(i) = norm(edges(i,:));
   angles(i) = acos(dot(edges(i,:), nextEdge) / (norm(edges(i,:)) * norm(nextEdge)));
end
edgeLengthVar = var(lengths / mean(lengths,'omitnan'),'omitnan');
angleVar = var(angles / mean(angles,'omitnan'),'omitnan');
angleMean = mean(angles,'omitnan');
angleTurn=acos(dot(edges(1,:),edges(end,:))/(norm(edges(1,:))*norm(edges(end,:))));
else % 1 or less valid blanks-plat pairs
    edgeLengthVar=NaN;
    angleVar=NaN;
    angleMean=NaN;
    angleTurn=NaN;
end
end
